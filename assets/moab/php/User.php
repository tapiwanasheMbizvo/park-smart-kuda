<?php
/**
 * Created by PhpStorm.
 * User: tapiwanashem
 * Date: 16/4/2020
 * Time: 12:03
 */

require_once "DBModel.php";
class User extends DBModel {


  private $first_name;
  private $last_name;
  private $email;
  private $password;
  private $is_admin;
  private $user_id;

    /**
     * @return mixed
     */
    public function getisAdmin()
    {
        return $this->is_admin;
    }

    /**
     * @param mixed $is_admin
     */
    public function setIsAdmin($is_admin)
    {
        $this->is_admin = $is_admin;
    }



    /**
     * @return mixed
     */
    public function getFirstName()
    {
        return $this->first_name;
    }

    /**
     * @param mixed $first_name
     */
    public function setFirstName($first_name)
    {
        $this->first_name = $first_name;
    }

    /**
     * @return mixed
     */
    public function getLastName()
    {
        return $this->last_name;
    }

    /**
     * @param mixed $last_name
     */
    public function setLastName($last_name)
    {
        $this->last_name = $last_name;
    }

    /**
     * @return mixed
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * @param mixed $email
     */
    public function setEmail($email)
    {
        $this->email = $email;
    }

    /**
     * @return mixed
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * @param mixed $password
     */
    public function setPassword($password)
    {
        $this->password = $password;
    }


    /**
     * @return mixed
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * @param mixed $user_id
     */
    public function setUserId($user_id)
    {
        $this->user_id = $user_id;
    }


    public function userLogin(){

        if(!isset($_SESSION)){

            session_start();
        }


        $pass = $this->getPassword();
        $user_name = $this->getEmail();
        $user =json_decode($this->withConditions("*", "email ='$user_name'"));
        $user = array_pop($user);


       if($user==null){

           $this->response['error']= "User not found";

       }else {



           if(password_verify($pass, $user->password)){

               $this->response["success"]= true;
                $_SESSION["user"]= $user;
                $_SESSION["is_logged_in"]= true;

                $user_id = $user->user_id;


               $wallets = json_decode($this->withJoins("*","inner join wallet on wallet.user_id=users.user_id where users.user_id = '".$user_id."' "));
               $wallet = array_pop($wallets);




               if(is_null($wallet)){

                   $_SESSION["balance"]= 0;
               }else {
                   $balance = $wallet->balance;
                   $_SESSION["balance"] = $balance;
               }

           }else{

               $this->response["error"]= "User Auth Failed";
           }
       }


        return json_encode($this->response);

    }

    public function makeUser(){

        $hash = password_hash($this->getPassword(), PASSWORD_DEFAULT);
        $assoc = array(


            "first_name"=>$this->getFirstName(),
            "last_name"=>$this->getLastName(),
            "email"=>$this->getEmail(),
            "password"=>$hash
        );

        $this->isAvailable("email", $this->getEmail()) ? $this->create($assoc): $this->response["error"]="Email Already Exists";

        //return parent::create($assoc); // TODO: Change the autogenerated stub

        return json_encode($this->response);
    }




}